{"version":3,"sources":["../node_modules/pdfjs-dist/lib/pdf.worker.js","../node_modules/pdfjs-dist/lib/core/primitives.js","../node_modules/pdfjs-dist/lib/core/stream.js","../node_modules/pdfjs-dist/lib/core/colorspace.js","../node_modules/pdfjs-dist/lib/core/encodings.js","../node_modules/pdfjs-dist/lib/core/parser.js","../node_modules/pdfjs-dist/lib/core/jpeg_stream.js","../node_modules/pdfjs-dist/lib/core/operator_list.js","../node_modules/pdfjs-dist/lib/core/glyphlist.js","../node_modules/pdfjs-dist/lib/core/chunked_stream.js","../node_modules/pdfjs-dist/lib/core/obj.js","../node_modules/pdfjs-dist/lib/core/ccitt.js","../node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","../node_modules/pdfjs-dist/lib/core/jpx.js","../node_modules/pdfjs-dist/lib/core/crypto.js","../node_modules/pdfjs-dist/lib/core/cff_parser.js","../node_modules/pdfjs-dist/lib/core/standard_fonts.js","../node_modules/pdfjs-dist/lib/core/unicode.js","../node_modules/pdfjs-dist/lib/core/function.js","../node_modules/pdfjs-dist/lib/core/worker.js","../node_modules/pdfjs-dist/lib/core/pdf_manager.js","../node_modules/pdfjs-dist/lib/core/document.js","../node_modules/pdfjs-dist/lib/core/ccitt_stream.js","../node_modules/pdfjs-dist/lib/core/jbig2_stream.js","../node_modules/pdfjs-dist/lib/core/jbig2.js","../node_modules/pdfjs-dist/lib/core/jpg.js","../node_modules/pdfjs-dist/lib/core/jpx_stream.js","../node_modules/pdfjs-dist/lib/core/annotation.js","../node_modules/pdfjs-dist/lib/core/evaluator.js","../node_modules/pdfjs-dist/lib/core/cmap.js","../node_modules/pdfjs-dist/lib/core/fonts.js","../node_modules/pdfjs-dist/lib/core/charsets.js","../node_modules/pdfjs-dist/lib/core/font_renderer.js","../node_modules/pdfjs-dist/lib/core/type1_parser.js","../node_modules/pdfjs-dist/lib/core/pattern.js","../node_modules/pdfjs-dist/lib/core/bidi.js","../node_modules/pdfjs-dist/lib/core/metrics.js","../node_modules/pdfjs-dist/lib/core/ps_parser.js","../node_modules/pdfjs-dist/lib/core/murmurhash3.js","../node_modules/pdfjs-dist/lib/core/image.js"],"names":["pdfjsCoreWorker","__webpack_require__","exports","WorkerMessageHandler","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","EOF","Name","name","this","nameCache","create","get","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","Promise","resolve","getArray","Array","isArray","i","ii","slice","length","isRef","fetch","getRaw","key","getKeys","keys","set","has","forEach","callback","empty","merge","dictArray","mergedDict","dict","isDict","keyName","undefined","Ref","num","gen","toString","str","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","call","clear","isName","v","type","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","start","bytes","Uint8Array","pos","end","isEmpty","getByte","getUint16","b0","b1","getInt32","strEnd","subarray","peekByte","peekedByte","peekBytes","skip","n","reset","moveStart","makeSubStream","buffer","stringToBytes","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","byteLength","size","buffer2","bufEnd","getBaseStreams","streams","chunk","shift","newLength","baseStreams","stream","Util","appendToArray","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","FormatError","codeSize","codeBuf","getBits","bits","b","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","c","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","p","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","isSpace","firstDigit","maxDecodeLength","digit","ch","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","Math","min","log","ColorSpace","unreachable","getRgb","src","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","width","height","actualHeight","bpc","comps","rgbBuf","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","resizeRgbImage","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","arguments","colorSpaces","resCS","mode","altIR","warn","createIR","isDefaultDecode","decode","shadow","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","tintFn","defaultColor","Float32Array","tmpBuf","scale","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","isString","charCodeAt","outputDelta","lookupPos","r","g","convertToRgb","srcScale","m","y","XW","YW","ZW","XB","YB","ZB","G","info","A","AG","pow","L","max","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","a","result","sRGBTransferFunction","color","adjustToRange","decodeL","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","x","high1","low2","high2","maxVal","Ls","as","bs","M","N","sqrt","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","e","MissingDataException","cipherTransform","makeInlineImage","array","push","makeStream","Number","isInteger","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","assert","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","StreamType","FLATE","LZW","DCT","JpegStream","JPX","JpxStream","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","Jbig2Stream","ex","knownCommands","strBuf","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","String","fromCharCode","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","join","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","Error","parser","obj1","obj2","obj3","isNum","hints","hintsLength","item","index","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","_jpg","configurable","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transform","transformNeeded","maxValue","decodeTransform","colorTransform","data","getData","drawWidth","drawHeight","getIR","forceDataSchema","createObjectURL","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","OPS","save","paintInlineImageXObject","restore","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","map","maxLineHeight","currentX","currentY","img","w","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","offset","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","iFirstPIMXO","arg","imageMask","paintSolidColorImageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","firstPIXOArg0","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","dependency","addDependencies","addOpList","opList","extendObj","lastChunk","transfers","cached","getTransfers","send","operatorList","getLookupTableFactory","getGlyphsUnicode","getDingbatsGlyphsUnicode","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","begin","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","reject","read","then","readChunk","arrayByteLength","chunkData","arraysToBytes","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","indexOf","sort","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","next","sliceIterator","TypeError","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","stringToUTF8String","bytesToString","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","stringToPDFString","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","s","st","toRoman","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","cleanup","promises","all","translatedFonts","translated","getPage","_this2","getPageDict","_ref","_ref2","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","actionName","addDefaultProtocolToUrl","urlDict","remoteDest","baseUrl","split","JSON","stringify","isBool","namedAction","jsAction","jsUrl","RegExp","exec","tryConvertUrlEncoding","absoluteUrl","createValidAbsoluteUrl","href","entries","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","first","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","test","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","InvalidPDFException","startXRefParsedCache","topDict","XRefParseException","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","isNaN","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","l","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","d","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","px","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","f","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","rcon","inv_s","mixCol","mix","decrypt128","s0","s1","s2","s3","encrypt128","cipherKey","t3","t4","expandKey128","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","outputLength","lastBlock","psLen","cipher","decrypt256","encrypt256","expandKey256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","PasswordException","PasswordResponses","NEED_PASSWORD","decodeUserPassword","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","b2","parseFloat","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_createClass","defineProperties","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","instance","_classCallCheck","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","clip","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","counter","abs","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","WorkerTask","_pdf_manager","_is_node","_is_node2","__esModule","default","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","reason","cancel","headersReady","setup","handler","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","catch","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","now","getOperatorList","renderInteractiveForms","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","MissingPDFException","UnexpectedResponseException","UnknownErrorException","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","window","self","postMessage","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","prop","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","getPageProp","getInheritedPageProp","valueArray","resources","mediaBox","cropBox","intersection","intersect","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","isArrayBuffer","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","_this4","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","parameters","LinkAnnotation","TextAnnotation","fieldType","getInheritableProperty","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","getAxialAlignedBoundingBox","maxY","getTransformMatrix","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref2$options","fetchBuiltInCMap","cachedCMap","compressionType","CMapCompressionType","NONE","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","inline","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","isInline","createImageData","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","font","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref3$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","_ref4$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","setCharWidth","setCharWidthAndBounds","beginInlineImage","beginImageData","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","BINARY","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","string32","searchParams","checksum","addTable","tag","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","TYPE3","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","hasOwnProperty","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","head","locaLength","b3","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","ratio","cssColor","makeCssRgb","background","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","toLowerCase","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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A,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eA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AA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAA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AA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,KACAnnB,IAAA,OAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,MACAnnB,IAAA,QAEAmnB,MAAA,OACAnnB,IAAA,SAEAmnB,MAAA,OACAnnB,IAAA,S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ACAA,EAAA,yBACAA,EAAA,+BACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,qCACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,6CACAA,EAAA,uCACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,eACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,ymBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA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","file":"static/js/0.37e0b7dd.chunk.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.305';\nvar pdfjsBuild = '9c6a8801';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/pdf.worker.js\n// module id = 3938\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/primitives.js\n// module id = 3940\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/stream.js\n// module id = 3941\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/colorspace.js\n// module id = 3942\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/encodings.js\n// module id = 3943\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/parser.js\n// module id = 3944\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpeg_stream.js\n// module id = 3945\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/operator_list.js\n// module id = 3946\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/glyphlist.js\n// module id = 3947\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/chunked_stream.js\n// module id = 3948\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/obj.js\n// module id = 3949\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/ccitt.js\n// module id = 3950\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js\n// module id = 3951\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpx.js\n// module id = 3952\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/crypto.js\n// module id = 3953\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/cff_parser.js\n// module id = 3954\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/standard_fonts.js\n// module id = 3955\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/unicode.js\n// module id = 3956\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/function.js\n// module id = 3957\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.305';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/worker.js\n// module id = 3958\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/pdf_manager.js\n// module id = 3959\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/document.js\n// module id = 3960\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/ccitt_stream.js\n// module id = 3961\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jbig2_stream.js\n// module id = 3962\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jbig2.js\n// module id = 3963\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpg.js\n// module id = 3964\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/jpx_stream.js\n// module id = 3965\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/annotation.js\n// module id = 3966\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: inline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: inline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/evaluator.js\n// module id = 3967\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/cmap.js\n// module id = 3968\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/fonts.js\n// module id = 3969\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/charsets.js\n// module id = 3970\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/font_renderer.js\n// module id = 3971\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/type1_parser.js\n// module id = 3972\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/pattern.js\n// module id = 3973\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/bidi.js\n// module id = 3974\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/metrics.js\n// module id = 3975\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/ps_parser.js\n// module id = 3976\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/murmurhash3.js\n// module id = 3977\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/lib/core/image.js\n// module id = 3978\n// module chunks = 0"],"sourceRoot":""}